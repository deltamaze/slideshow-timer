@namespace blazor.Components
@using System.Text;
@using blazor.Store
@inject AppState AppState
@implements IDisposable



<p>
    @FormatDisplayTime()
</p>
@* Todo: break out into two buttons, one for start/pause and show depending on running status *@
<div class="stopwatchButtons">
    <button class="btn-primary stopwatchLeftButon" @onclick="StartPause">@FormatStartPauseText()</button>

    <button class="btn-primary stopwatchRightButon" @onclick="ResetStopwatch">Reset</button>
</div>


@code {


    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }

    void StartPause()
    {
        if (AppState.AppStopwatch.IsRunning())
        {
            AppState.AppStopwatch.PauseStopwatch();
        }
        else
        {
            AppState.AppStopwatch.StartStopwatch();
        }
    }
    void ResetStopwatch()
    {
        AppState.AppStopwatch.ResetStopwatch();
    }
    string FormatDisplayTime()
    {
        StringBuilder sb = new StringBuilder();
        sb.AppendFormat("{0:D2}:", AppState.AppStopwatch.CurrentHour);
        sb.AppendFormat("{0:D2}:", AppState.AppStopwatch.CurrentMinute);
        sb.AppendFormat("{0:D2}", AppState.AppStopwatch.CurrentSecond);

        return sb.ToString();
    }

    string FormatStartPauseText()
    {

        return AppState.AppStopwatch.IsRunning() ? "Stop" : "Start";
    }

}
